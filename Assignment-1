#include<iostream>
using namespace std;
struct student
{
	int rollno;
	string name;
	float sgpa;
};
void bubbleSort(student arr[],int n )
{
	for(int i=0;i<4;i++)
	{
		for(int  j=0;j<4;j++)
		{
			if(arr[j].rollno>arr[j+1].rollno)
			{
				student a=arr[j];
				arr[j]=arr[j+1];
				arr[j+1]=a;
				
			}
		}
	}
}
void insertionSort(student arr[],int n)
{
	for( int i=1;i<n;i++)
	{
		student key = arr[i];
		int j=i-1;
		
		while(j>=0 && arr[j].name>key.name)
		{
			arr[j+1]=arr[j];
			j=j-1;		
		}
		arr[j+1]=key;
	}
}

int partition(student arr[],int low,int high)
{
	float pivot=arr[high].sgpa;
	int i=low-1;
	
	for(int j=low;j<high;++j)
	{
		if(arr[j].sgpa>pivot)
		{
			++i;
			student temp=arr[i];
			arr[i]=arr[j];
			arr[j]=temp;
			
		}
	}
	student temp=arr[i+1];
	arr[i+1]=arr[high];
	arr[high]=temp;
	return i+1;
}
void quickSort(student arr[],int low,int high)
{
	if(low<high)
	{
		int pi=partition(arr,low,high);
		quickSort(arr,low,pi-1);
		quickSort(arr,pi+1,high);
	}
}
void searchSgpa(student s[],int n,float search)
{
	bool found=false;
	for(int i=0;i<n;i++)
	{
		if(s[i].sgpa==search)
		
		{
			if(!found)
			{
				cout<<"student with sgpa::"<<search<<endl;
				found=true;
			}
			cout<<"name:"<<s[i].name<<endl;
		}
	}
	 
	

	 	 	
	if(!found)
	{
		cout<<"No student found with sgpa"<<endl;
		
	}
}
int binarySearch(student arr[],int size,string key)
{
	int start=0;
	int end=size-1;
	int mid=start+(end-start)/2; 
	
	while(start<=end)
	{
		if(arr[mid].name==key)
		{
			return mid ;
		}
	
	if(key>arr[mid].name)
	{
		start=mid+1;
	}
	else
	{
		end=mid-1;
	}
	mid=start+(end-start)/2;
	}
	return-1;
}
	

int main()
{ 
	student s[5];
	cout<<"enter the details"<< endl;
	cout<<endl;
	for(int i=0;i<5;i++)
	{
		cout<<"enter the name of student"<<endl;
		cin>>s[i].name;
		cout<<"enter the rollno.of student"<<endl;
		cin>>s[i].rollno;
		cout<<"enter the  sgpa of student"<<endl;
		cin>>s[i].sgpa;
		cout<<endl;
		
	}
	//bubbleSort
	bubbleSort(s,5);
	cout<<"sorted roll numbers are::"<<endl;
	for(int j=0;j<5;j++)
	{
			cout<<s[j].rollno<<endl;
			cout<<endl;
	}
	//insertionSort
	insertionSort(s,5);
	
	cout<<"sorted names of the students are::"<<endl;
	for(int i=0;i<5;i++)
	{
		cout<<s[i].name<<endl;
		cout<<endl;
	}
	//quickSort
	quickSort(s,0,4);
	
	cout<<"top three students are::"<<endl;
	cout<<endl;
	for(int i=0;i<3;++i)
	{
		cout<<"name::"<<s[i].name<<",rollno::"<<s[i].rollno<<",sgpa::"<<s[i].sgpa<<endl;
	}
	
 //search by sgpa
 	
 	float search;
			cout<<"enter the sgpa to search::";
			cin>>search;
			searchSgpa(s,5,search);
	//binary search
	string key;
	cout<<"enter a name to search::"<<endl;
	cin>>key;
	cout<<endl;
	
	insertionSort(s,5);
	int index;
	index=binarySearch(s,5,key);
	 
	if(index!=-1)
	{
		cout<<"student found::"<<endl;
		cout<<"name::"<<s[index].name<<endl;
		cout<<"rollno::"<<s[index].rollno<<endl;
		cout<<"sgpa::"<<s[index].sgpa;
	}
	else
	
	
	{
	 	cout<<"student not found"<<endl;
	}
	return 0;
}
